image: docker:latest

services:
  - docker:dind

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

stages:
  - Validate
  - Build
  - Test
  - Analyze
  - Release
  - Deploy

##
## Validate
##
shellcheck:
  stage: Validate
  image: alpine:latest
  script:
    - echo "Perform shellcheck test on provision scripts"

##
## Build
##
build-master:
  stage: Build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - #docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

build:
  stage: Build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - #docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  except:
    - master

##
## Test
##
bats:
  stage: Test
  image: alpine:latest
  script:
    - echo "Run docker tests from bats"

##
## Analyze
##
audit:
  stage: Analyze
  image: alpine:latest
  script:
    - echo "Verify that all labels are applied to image"
    - echo "Verify that the image is minimized"

##
## Release
##
tag:
  stage: Release
  image: alpine:latest
  script:
    - echo "Tag the image for deployment"
    - echo "Deploy to the staging repository"

##
## Deploy
##
docker.hub:
  stage: Deploy
  image: alpine:latest
  script:
    - echo "Deploy the image to docker hub"
