image: docker:latest

services:
  - docker:dind

stages:
  - Validate
  - Build
  - Test
  - Analyze
  - Release
  - Deploy

##
## Validate
##
shellcheck:
  stage: Validate
  image: cardboardci/shellcheck
  script:
    - sh .build/shellcheck.sh

hadolint:
  stage: Validate
  image: cardboardci/hadolint
  script:
    - hadolint Dockerfile*

##
## Build
##
build:
  stage: Build
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE"

##
## Test
##
bats:
  stage: Test
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"

##
## Analyze
##
audit:
  stage: Analyze
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"

##
## Release
##
tag:
  stage: Release
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"

##
## Deploy
##
docker.hub:
  stage: Deploy
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
